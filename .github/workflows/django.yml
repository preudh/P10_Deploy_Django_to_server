name: Django app CI/CD

on:
  push:
    branches: '**'

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run tests
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          DB_NAME: github_actions
          DB_USER: postgres
          DB_PASSWORD: postgres
#          DB_HOST: 127.0.0.1
          DB_HOST: postgres
          DB_PORT: 5432
          DB_ENGINE: django.db.backends.postgresql
        run: |
          python manage.py collectstatic --no-input
          python3 manage.py test app_users.tests.CustomUserTests --settings=P8_Django_Purbeurre.test_settings
          python3 manage.py test app_manage.tests.SearchTestCase --settings=P8_Django_Purbeurre.test_settings
          python3 manage.py test app_manage.tests.BasePageTestCase --settings=P8_Django_Purbeurre.test_settings
          python3 manage.py test app_manage.tests.TermesPageTestCase --settings=P8_Django_Purbeurre.test_settings

  deploy:
    name: Deploy to DigitalOcean
    runs-on: ubuntu-latest
    needs: build
    services: # Ajout de la section services pour le job deploy
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions
        ports:
          - 5432:5432
#        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
#      - name: Afficher les logs PostgreSQL
#        run: cat /var/log/postgresql/postgresql-13-main.log
#      - name: VÃ©rification de PostgreSQL
#        run: |
#            apt-get update
#            apt-get install -y net-tools
#            netstat -tuln | grep 5432

      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python manage.py migrate
      - name: Load data into database
        run: |
          source venv/bin/activate
          python manage.py cm_db
      - name: Deploy to DigitalOcean
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          args: kubernetes cluster kubeconfig save p8-django-purbeurre
        env:
          DIGITALOCEAN_ACCESS_TOKEN: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          DB_HOST: ${{ secrets.DB_HOST }}
          DB_NAME: ${{ secrets.DB_NAME }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_PORT: ${{ secrets.DB_PORT }}
          DB_SSLMODE: ${{ secrets.DB_SSLMODE }}
          args: |
            gunicorn --worker-tmp-dir /dev/P8_Django_Purbeurre.wsgi.
            run -e "DJANGO_SETTINGS_MODULE=P8_Django_Purbeurre.settings" -e "DB_NAME=$DB_NAME" -e "DB_USER=$DB_USER" -e "DB_PASSWORD=$DB_PASSWORD" -e "DB_HOST=$DB_HOST" - --image=django
