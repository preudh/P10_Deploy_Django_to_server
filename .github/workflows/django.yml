name: Django app CI/CD

on:
  push:
    branches: '**'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:latest
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
        ports:
            - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10'

# Ici, nous ajoutons l'Ã©tape pour nettoyer le cache pip
    - name: Nettoyez les caches pip
      run: |
        python -m pip cache purge
    



    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: python manage.py test
      env:
        DB_HOST: localhost
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DEBUG: True  # Set to False for production

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test
    if: github.ref == 'refs/heads/main'  # Adjust with your main branch name if it's different.

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Login to DigitalOcean Container Registry
      uses: docker/login-action@v1
      with:
        registry: registry.digitalocean.com
        username: ${{ secrets.DO_REGISTRY_USERNAME }}
        password: ${{ secrets.DO_REGISTRY_TOKEN }}

    - name: Build and push Docker image
      run: |
        docker build -t registry.digitalocean.com/my-project/my-app:$GITHUB_SHA .
        docker push registry.digitalocean.com/my-project/my-app:$GITHUB_SHA

    - name: Deploy to DigitalOcean
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
        args: kubernetes cluster update my-cluster --update-kubeconfig

    - name: Set Kubernetes context
      run: kubectl config use-context do-nyc1-my-cluster

    - name: Deploy app
      run: |
        kubectl set image deployment/my-app my-app=registry.digitalocean.com/my-project/my-app:$GITHUB_SHA
        kubectl rollout status deployment/my-app