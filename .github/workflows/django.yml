name: Django app CI/CD

on:
  push:
    branches: '**'

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Build Docker image and Run Tests
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        # Ajoutez d'autres secrets si nécessaire...
      run: |
        docker-compose -f docker-compose.ci.yml up --build --exit-code-from django

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_test  # Assurez-vous que cette étape ne s'exécute que si la précédente réussit

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Deploy with docker-compose on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          password: ${{ secrets.DO_PASSWORD }}
          script: |
            cd /root
            # Supprimez l'ancien répertoire s'il existe
            rm -rf mon_projet
            # Clonez le dépôt en utilisant SSH
            GIT_SSH_COMMAND="ssh -i <(echo "$PRIVATE_KEY")" git clone git@github.com:preudh/P10_Deploy_Django_to_server.git mon_projet
            cd mon_projet
            docker-compose -f docker-compose.prod.yml up --build -d
      - name: Deploy with docker-compose on DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /***
            # Supprimez l'ancien répertoire s'il existe
            rm -rf mon_projet
            # Clonez le dépôt en utilisant SSH
            git clone git@github.com:preudh/P10_Deploy_Django_to_server.git mon_projet
            cd mon_projet
            docker-compose -f docker-compose.prod.yml up --build -d
