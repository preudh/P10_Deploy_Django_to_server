docker-compose run django django-admin startproject P8_Django_Purbeurre .
docker exec -it db psql -U postgres

docker-compose up / down

Postgres
==========

docker exec -it db psql -U postgres
\c <database_name>
\d
\d+ <table_name>
\q


==========
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'db',
        'PORT': 5432,
    }
}

docker-compose -f docker-compose.dev.yml down -v
docker-compose -f docker-compose.dev.yml build
docker-compose -f docker-compose.dev.yml up -d

docker-compose -f docker-compose.dev.yml down
docker-compose -f docker-compose.dev.yml build --no-cache
docker-compose -f docker-compose.dev.yml up -d
docker exec -it django python manage.py migrate
docker exec -it django python manage.py cm_db

exporter la base de donn√©es purbeurre via pgadmin sur le repertoire ci dessous
puis utiliser les commandes ci dessous pour la restaurer dans le container pgdb
cd C:\ProjetsOC\P10
docker cp C:\ProjetsOC\P10\purbeurre pgdb:/tmp/purbeurre
docker exec -it pgdb psql -U postgres -d postgres -a -f /tmp/purbeurre
docker exec -it pgdb rm /tmp/purbeurre










docker cp C:\ProjetsOC\P10\purbeurre pgdb:/
docker exec -it pgdb /bin/bash
psql -U postgres -d postgres < /purbeurre






docker exec -it django pip freeze


.\venv\Scripts\Activate

pip uninstall psycopg2-binary

pip install psycopg2

python manage.py collectstatic
